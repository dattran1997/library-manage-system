/*
 * Name: Lương Cao Đức + Nguyễn Thế Đại
 * Date:
 * Project's name: Library Manage System
 * Teacher's name:
 * Class name: VUW-IT 15
 * Name of anyone who help you:
 * Brief Discription: system for managing lib system
 */
package librarian_gui;

import static main_controller.connectDataP.conn;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import librarian_controller.BorrowManage1_c;

/**
 *
 * @author Lương Cao Đức + Nguyễn Thế Đại
 */
public class BorrowManage1 extends javax.swing.JPanel {

    /**
     * Creates new form BorrowManage1
     */
    DefaultTableModel model = new DefaultTableModel();
    Statement stmt = null;
    PreparedStatement ptmt = null;
    ResultSet rs = null;
    public BorrowManage1() {
        initComponents();
        model = (DefaultTableModel) Table.getModel();
    }

    public void start(){
        Start.setText("register book");
    }
    public void View(){
        clearTable();
        try{
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from registerbook1");
            while (rs.next()) {
                /// hien thi tren table
                model.addRow(new Object[]{rs.getString(1),rs.getString(2)}); 
            }
        }catch(Exception ex){}
    }
    public void clearTable(){
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    public void delete(int index,String bookname){
        String delete = "delete from registerbook1 where username = ? and bookname = ?";
        PreparedStatement ptmt = null;
        try {
            String delString = (String) Table.getValueAt(index, 0); // trả về chuỗi đầu trong data
            
            ptmt = conn.prepareStatement(delete); // hàm xóa 
            ptmt.setString(1,delString);  // cột 0 trong bảng ứng cột 1 trong data
            ptmt.setString(2,bookname);
            ptmt.execute();
        } catch (SQLException ex) {
            System.out.println("");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Start = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        searchbook = new javax.swing.JTextField();

        Start.setText("jLabel1");

        acceptButton.setText("accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "username", "bookname"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        searchButton.setText("search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchbook)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Start)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(Start)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

 BorrowManage1_c br1c = new BorrowManage1_c();
    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        int index  = Table.getSelectedRow();
        String username = (String) Table.getValueAt(index, 0);
        String bookname = (String) Table.getValueAt(index, 1);
        if(br1c.check(username,bookname))
            if(br1c.update(bookname)){
                br1c.accept(username, bookname);
                delete(index,bookname);
                clearTable();
                View();
                br1c.fixStatus("valid", bookname);
            }
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int index  = Table.getSelectedRow();
        String bookname = (String) Table.getValueAt(index, 1);
        String username = (String) Table.getValueAt(index, 0);
        delete(index,bookname);
        clearTable();
        View();
        br1c.fixRemain(username);
        br1c.fixStatus("valid", bookname);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        Searching();
        //View();
        searchbook.setText("");
    }//GEN-LAST:event_searchButtonActionPerformed

    
    public void Searching(){
        clearTable(); //dọn bảng
        String text = searchbook.getText();
        if(text.equals("")){
           View();
        }else
        try {
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from registerbook1 where username like '%"+text+"%'");
            while(rs.next()){
                    model.addRow(new Object[]{rs.getString(1),rs.getString(2)});
                }
        } catch (SQLException ex) {
            System.out.println("cant load");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Start;
    private javax.swing.JTable Table;
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchbook;
    // End of variables declaration//GEN-END:variables
}
